name: RDP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'UserAuthentication' -Value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'SecurityLayer' -Value 0
          netsh advfirewall firewall delete rule name="RDP-Tailscale" || echo "no old rule"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Static Password
        shell: pwsh
        run: |
          $password = ConvertTo-SecureString "admin@123" -AsPlainText -Force
          if (-not (Get-LocalUser -Name "TOOLBOXLAP" -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name "TOOLBOXLAP" -Password $password -FullName "RDP User" -Description "Created for RDP"
          }
          Add-LocalGroupMember -Group "Administrators" -Member "TOOLBOXLAP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "TOOLBOXLAP"

      - name: Install Tailscale
        shell: pwsh
        run: |
          try {
            if (Get-Command winget -ErrorAction SilentlyContinue) {
              winget install --accept-source-agreements --accept-package-agreements Tailscale.Tailscale
            } else {
              throw "winget not found"
            }
          } catch {
            Write-Host "Winget failed, using MSI installer..."
            $installerPath = "$env:TEMP\tailscale.msi"
            $url = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
            Invoke-WebRequest -Uri $url -OutFile $installerPath
            Start-Process msiexec.exe -ArgumentList "/i", $installerPath, "/quiet", "/norestart" -Wait
            Remove-Item $installerPath -Force
          }

      - name: Establish Tailscale Connection
        shell: pwsh
        run: |
          &"$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner
          $TIp = $null
          $retries = 0
          while (-not $TIp -and $retries -lt 10) {
            $TIp = &"$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            Start-Sleep -Seconds 5
            $retries++
          }
          if (-not $TIp) {
            Write-Error "Tailscale IP not obtained. Exiting."
            exit 1
          }
          echo "TAILSCALE_IP=$TIp" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Test RDP Connectivity
        shell: pwsh
        run: |
          if (-not (Test-NetConnection -ComputerName localhost -Port 3389).TcpTestSucceeded) {
            Write-Error "TCP connection to RDP port 3389 failed"
            exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        shell: pwsh
        run: |
          Write-Host "=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: TOOLBOXLAP"
          Write-Host "Password: admin@123"
          Write-Host "==================="
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
            Start-Sleep -Seconds 300
          }
